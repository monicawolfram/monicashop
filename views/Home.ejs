<!DOCTYPE html>
<html lang="sw">
<head>
  <meta charset="UTF-8">
  <title>Shop Dashboard</title>
  <style>
    body { font-family: Arial, sans-serif; background: #f4f6f9; margin: 0; padding: 0; }
    header { background: #2c3e50; color: white; padding: 15px; text-align: center; }
    .container { display: grid; grid-template-columns: repeat(4, 1fr); gap: 15px; padding: 20px; }
    .card { background: white; padding: 15px; border-radius: 8px; box-shadow: 0 2px 6px rgba(0,0,0,0.1); }
    .card h3 { margin: 0 0 10px; font-size: 16px; color: #333; }
    .card p { font-size: 14px; color: #555; }
    .table-container { grid-column: span 4; background: white; padding: 15px; border-radius: 8px; box-shadow: 0 2px 6px rgba(0,0,0,0.1); margin-bottom: 20px; }
    table { width: 100%; border-collapse: collapse; margin-top: 10px; }
    table th, table td { border: 1px solid #ddd; padding: 8px; text-align: center; }
    table th { background: #3498db; color: white; }
    canvas { margin-top: 15px; width: 100% !important; max-height: 300px; }
  </style>
</head>
<body>

<header>
  <h1>ðŸ“Š Shop Dashboard</h1>
</header>

<div class="container" id="dashboardCards">
  <!-- Cards will be generated dynamically -->
</div>

<div class="table-container">
  <h3>ðŸ“¦ Orodha ya Bidhaa Zote</h3>
  <table id="productsTable">
    <tr>
      <th>Jina la Bidhaa</th>
      <th>Idadi</th>
      <th>Bei ya Manunuzi</th>
      <th>Bei ya Mauzo</th>
      <th>Status</th>
    </tr>
    <!-- Rows will be added dynamically -->
  </table>
</div>

<div class="table-container">
  <h3>ðŸ“ˆ Grafu ya Mauzo na Bidhaa</h3>
  <canvas id="salesChart"></canvas>
  <canvas id="productsChart"></canvas>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
async function loadDashboard() {
  try {
    // Fetch all dashboard data including products, sales, profit
    const res = await fetch('/products'); // <-- backend endpoint for products
    const data = await res.json();

    if (!data.success) return;

    // ------------------- CARDS -------------------
    const container = document.getElementById('dashboardCards');
    container.innerHTML = '';

    const periods = ['Leo', 'Wiki', 'Mwezi', 'Mwaka'];

    // Sales Cards
    if(data.sales){
      periods.forEach(period => {
        const div = document.createElement('div');
        div.className = 'card';
        div.innerHTML = `<h3>Mauzo ya ${period}</h3><p>TZS ${data.sales[period.toLowerCase()]?.toLocaleString() || 0}</p>`;
        container.appendChild(div);
      });
    }

    // Profit Cards
    if(data.profit){
      periods.forEach(period => {
        const div = document.createElement('div');
        div.className = 'card';
        div.innerHTML = `<h3>Faida/Hasara (${period})</h3><p>Faida: TZS ${data.profit[period.toLowerCase()]?.toLocaleString() || 0}</p>`;
        container.appendChild(div);
      });
    }

    // ------------------- STOCK CARDS -------------------
    const products = data.products || [];
    const lowStock = products.filter(p => p.stock <= (p.min_stock || 0)).map(p => p.name).join(', ') || 'Hakuna';
    const important = products.filter(p => p.is_important == 1).map(p => p.name).join(', ') || 'Hakuna';
    const nonImportant = products.filter(p => p.is_important == 0).map(p => p.name).join(', ') || 'Hakuna';
    const totalQty = products.reduce((sum, p) => sum + (p.stock || 0), 0);

    const stockCards = [
      { title: 'Bidhaa Zilizopungua', value: lowStock },
      { title: 'Bidhaa Muhimu', value: important },
      { title: 'Bidhaa Zisizo Muhimu', value: nonImportant },
      { title: 'Idadi ya Bidhaa', value: `Jumla: ${totalQty} pcs` }
    ];

    stockCards.forEach(card => {
      const div = document.createElement('div');
      div.className = 'card';
      div.innerHTML = `<h3>${card.title}</h3><p>${card.value}</p>`;
      container.appendChild(div);
    });

    // ------------------- TABLE -------------------
    const table = document.getElementById('productsTable');
    // Clear old rows except header
    table.querySelectorAll('tr:not(:first-child)').forEach(r => r.remove());

    products.forEach(p => {
      const status = p.stock <= (p.min_stock || 0) ? 'Pungufu' : 'Muhimu';
      const row = document.createElement('tr');
      row.innerHTML = `
        <td>${p.name}</td>
        <td>${p.stock}</td>
        <td>TZS ${parseFloat(p.cost_price).toLocaleString()}</td>
        <td>TZS ${parseFloat(p.sell_price).toLocaleString()}</td>
        <td>${status}</td>
      `;
      table.appendChild(row);
    });

    // ------------------- CHARTS -------------------
    if(document.getElementById('salesChart')){
      new Chart(document.getElementById('salesChart'), {
        type: 'line',
        data: {
          labels: periods,
          datasets: [{
            label: 'Mauzo (TZS)',
            data: periods.map(p => data.sales?.[p.toLowerCase()] || 0),
            borderColor: 'blue',
            fill: false
          }]
        }
      });
    }

    if(document.getElementById('productsChart')){
      new Chart(document.getElementById('productsChart'), {
        type: 'bar',
        data: {
          labels: products.map(p => p.name),
          datasets: [{
            label: 'Idadi ya Bidhaa',
            data: products.map(p => p.stock),
            backgroundColor: ['red','green','orange','gray','purple']
          }]
        }
      });
    }

  } catch (err) {
    console.error('Error loading dashboard:', err);
  }
}

// Load dashboard automatically
loadDashboard();
</script>



</body>
</html>
